# action.yaml
name: "Build and deploy python Sphinx documentation"
description: "Build sphinx documentation based on pyproject.toml"
branding:
  icon: 'corner-right-up'
  color: 'green'
inputs:
  python-version:
    description: "Python version"
    required: true
    default: "3.8"
  pyproject-path:
    description: "location of pyproject file"
    required: true
    default: "pyproject.toml"
  dependency-path:
    description: "dependency path in pyproject file"
    required: true
  docs-source:
    description: "sphinx docs source path"
    required: true
    default: "docs/"
  docs-build:
    description: "sphinx docs build path"
    required: true
    default: "docs_build/"
  external-repo:
    description: "external repository"
    required: true
  external-repo-branch:
    description: "branch of external repository"
    required: true
    default: "master"
  deploy-token:
    description: "deploy key" # normally secretes.token
    required: true 

runs:
  using: "composite"
  steps:
    - name: Checkout repository content
      uses: actions/checkout@v3 # Checkout the repository content to github runner.
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: Install tomli package
      run: python -m pip install tomli
      shell: bash
    - name: Parse pyproject.toml
      id: project-info
      run: python ${{ github.action_path }}/parse.py ${{ inputs.pyproject-path }} ${{ inputs.dependency-path}} >> $GITHUB_OUTPUT
      shell: bash
    - name: Install Package Dependencies
      run: python -m pip install ${{ steps.project-info.outputs.DEP }}
      shell: bash
    - name: Build sphinx
      run: sphinx-build -b html ${{ inputs.docs-source }} ${{ inputs.docs-build }}
      shell: bash
    - name: Deploy to external repos
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ inputs.deploy-token }}
        external_repository: ${{ inputs.external-repo }}
        publish_branch: ${{ inputs.external-repo-branch }}
        publish_dir: ${{ inputs.docs-build }}
